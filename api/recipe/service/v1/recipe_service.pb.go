// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.1
// source: v1/recipe_service.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IndexRequest) Reset() {
	*x = IndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRequest) ProtoMessage() {}

func (x *IndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRequest.ProtoReflect.Descriptor instead.
func (*IndexRequest) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{0}
}

type IndexReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Carousel []string `protobuf:"bytes,1,rep,name=carousel,proto3" json:"carousel,omitempty"`
}

func (x *IndexReply) Reset() {
	*x = IndexReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexReply) ProtoMessage() {}

func (x *IndexReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexReply.ProtoReflect.Descriptor instead.
func (*IndexReply) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{1}
}

func (x *IndexReply) GetCarousel() []string {
	if x != nil {
		return x.Carousel
	}
	return nil
}

type SaveIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Carousel []string `protobuf:"bytes,1,rep,name=carousel,proto3" json:"carousel,omitempty"`
}

func (x *SaveIndexRequest) Reset() {
	*x = SaveIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveIndexRequest) ProtoMessage() {}

func (x *SaveIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveIndexRequest.ProtoReflect.Descriptor instead.
func (*SaveIndexRequest) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{2}
}

func (x *SaveIndexRequest) GetCarousel() []string {
	if x != nil {
		return x.Carousel
	}
	return nil
}

type SaveIndexReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveIndexReply) Reset() {
	*x = SaveIndexReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveIndexReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveIndexReply) ProtoMessage() {}

func (x *SaveIndexReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveIndexReply.ProtoReflect.Descriptor instead.
func (*SaveIndexReply) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{3}
}

type RecipesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// @inject_tag: json:"title"
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	// @inject_tag: json:"category_id"
	CategoryId int64 `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
	// @inject_tag: json:"weight"
	Weight int64 `protobuf:"varint,4,opt,name=weight,proto3" json:"weight"`
	// @inject_tag: json:"page"
	Page int64 `protobuf:"varint,5,opt,name=page,proto3" json:"page"`
	// @inject_tag: json:"size"
	Size int64 `protobuf:"varint,6,opt,name=size,proto3" json:"size"`
	// @inject_tag: json:"ids"
	Ids []int64 `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *RecipesRequest) Reset() {
	*x = RecipesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecipesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipesRequest) ProtoMessage() {}

func (x *RecipesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipesRequest.ProtoReflect.Descriptor instead.
func (*RecipesRequest) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{4}
}

func (x *RecipesRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecipesRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RecipesRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *RecipesRequest) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *RecipesRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RecipesRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *RecipesRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type RecipesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"total"
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	// @inject_tag: json:"items"
	Items []*RecipeReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *RecipesReply) Reset() {
	*x = RecipesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecipesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipesReply) ProtoMessage() {}

func (x *RecipesReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipesReply.ProtoReflect.Descriptor instead.
func (*RecipesReply) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{5}
}

func (x *RecipesReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RecipesReply) GetItems() []*RecipeReply {
	if x != nil {
		return x.Items
	}
	return nil
}

type RecipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *RecipeRequest) Reset() {
	*x = RecipeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipeRequest) ProtoMessage() {}

func (x *RecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipeRequest.ProtoReflect.Descriptor instead.
func (*RecipeRequest) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{6}
}

func (x *RecipeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RecipeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// @inject_tag: json:"title"
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	// @inject_tag: json:"category_id"
	CategoryId int64 `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
	// @inject_tag: json:"content"
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content"`
	// @inject_tag: json:"weight"
	Weight int64 `protobuf:"varint,5,opt,name=weight,proto3" json:"weight"`
	// @inject_tag: json:"sort"
	Sort int64 `protobuf:"varint,6,opt,name=sort,proto3" json:"sort"`
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,7,opt,name=status,proto3" json:"status"`
	// @inject_tag: json:"creator"
	Creator string `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator"`
	// @inject_tag: json:"modifier"
	Modifier string `protobuf:"bytes,9,opt,name=modifier,proto3" json:"modifier"`
	// @inject_tag: json:"create_time"
	CreateTime int64 `protobuf:"varint,10,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	// @inject_tag: json:"update_time"
	UpdateTime int64 `protobuf:"varint,11,opt,name=update_time,json=updateTime,proto3" json:"update_time"`
	// @inject_tag: json:"favorites"
	Favorites int64 `protobuf:"varint,12,opt,name=favorites,proto3" json:"favorites"`
	// @inject_tag: json:"image"
	Image string `protobuf:"bytes,13,opt,name=image,proto3" json:"image"`
}

func (x *RecipeReply) Reset() {
	*x = RecipeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecipeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipeReply) ProtoMessage() {}

func (x *RecipeReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipeReply.ProtoReflect.Descriptor instead.
func (*RecipeReply) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{7}
}

func (x *RecipeReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecipeReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RecipeReply) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *RecipeReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RecipeReply) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *RecipeReply) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *RecipeReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RecipeReply) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *RecipeReply) GetModifier() string {
	if x != nil {
		return x.Modifier
	}
	return ""
}

func (x *RecipeReply) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *RecipeReply) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *RecipeReply) GetFavorites() int64 {
	if x != nil {
		return x.Favorites
	}
	return 0
}

func (x *RecipeReply) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type SaveRecipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// @inject_tag: json:"title"
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	// @inject_tag: json:"category_id"
	CategoryId int64 `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
	// @inject_tag: json:"content"
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content"`
	// @inject_tag: json:"weight"
	Weight int64 `protobuf:"varint,5,opt,name=weight,proto3" json:"weight"`
	// @inject_tag: json:"sort"
	Sort int64 `protobuf:"varint,6,opt,name=sort,proto3" json:"sort"`
	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id"`
	// @inject_tag: json:"image"
	Image string `protobuf:"bytes,8,opt,name=image,proto3" json:"image"`
}

func (x *SaveRecipeRequest) Reset() {
	*x = SaveRecipeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRecipeRequest) ProtoMessage() {}

func (x *SaveRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRecipeRequest.ProtoReflect.Descriptor instead.
func (*SaveRecipeRequest) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{8}
}

func (x *SaveRecipeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveRecipeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SaveRecipeRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *SaveRecipeRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SaveRecipeRequest) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *SaveRecipeRequest) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SaveRecipeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SaveRecipeRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type SaveRecipeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *SaveRecipeReply) Reset() {
	*x = SaveRecipeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRecipeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRecipeReply) ProtoMessage() {}

func (x *SaveRecipeReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRecipeReply.ProtoReflect.Descriptor instead.
func (*SaveRecipeReply) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{9}
}

func (x *SaveRecipeReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteRecipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json "id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json "user_id"
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteRecipeRequest) Reset() {
	*x = DeleteRecipeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecipeRequest) ProtoMessage() {}

func (x *DeleteRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecipeRequest.ProtoReflect.Descriptor instead.
func (*DeleteRecipeRequest) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteRecipeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteRecipeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteRecipeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json "id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRecipeReply) Reset() {
	*x = DeleteRecipeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecipeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecipeReply) ProtoMessage() {}

func (x *DeleteRecipeReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecipeReply.ProtoReflect.Descriptor instead.
func (*DeleteRecipeReply) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteRecipeReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CategoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// @inject_tag: json:"parent_id"
	ParentId string `protobuf:"bytes,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	// @inject_tag: json:"page"
	Page int64 `protobuf:"varint,4,opt,name=page,proto3" json:"page"`
	// @inject_tag: json:"size"
	Size int64 `protobuf:"varint,5,opt,name=size,proto3" json:"size"`
	// @inject_tag: json:"all"
	All int64 `protobuf:"varint,6,opt,name=all,proto3" json:"all"`
	// @inject_tag: json:"not_id"
	NotId string `protobuf:"bytes,7,opt,name=not_id,json=notId,proto3" json:"not_id"`
}

func (x *CategoriesRequest) Reset() {
	*x = CategoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoriesRequest) ProtoMessage() {}

func (x *CategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoriesRequest.ProtoReflect.Descriptor instead.
func (*CategoriesRequest) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{12}
}

func (x *CategoriesRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategoriesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategoriesRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *CategoriesRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CategoriesRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CategoriesRequest) GetAll() int64 {
	if x != nil {
		return x.All
	}
	return 0
}

func (x *CategoriesRequest) GetNotId() string {
	if x != nil {
		return x.NotId
	}
	return ""
}

type CategoriesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items []*CategoryReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CategoriesReply) Reset() {
	*x = CategoriesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoriesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoriesReply) ProtoMessage() {}

func (x *CategoriesReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoriesReply.ProtoReflect.Descriptor instead.
func (*CategoriesReply) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{13}
}

func (x *CategoriesReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CategoriesReply) GetItems() []*CategoryReply {
	if x != nil {
		return x.Items
	}
	return nil
}

type SaveCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// @inject_tag: json:"parent_id"
	ParentId int64 `protobuf:"varint,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	// @inject_tag: json:"sort"
	Sort int64 `protobuf:"varint,4,opt,name=sort,proto3" json:"sort"`
	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id"`
}

func (x *SaveCategoryRequest) Reset() {
	*x = SaveCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveCategoryRequest) ProtoMessage() {}

func (x *SaveCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveCategoryRequest.ProtoReflect.Descriptor instead.
func (*SaveCategoryRequest) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{14}
}

func (x *SaveCategoryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveCategoryRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SaveCategoryRequest) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SaveCategoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type SaveCategoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json "id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SaveCategoryReply) Reset() {
	*x = SaveCategoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveCategoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveCategoryReply) ProtoMessage() {}

func (x *SaveCategoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveCategoryReply.ProtoReflect.Descriptor instead.
func (*SaveCategoryReply) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{15}
}

func (x *SaveCategoryReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json "id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CategoryRequest) Reset() {
	*x = CategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryRequest) ProtoMessage() {}

func (x *CategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryRequest.ProtoReflect.Descriptor instead.
func (*CategoryRequest) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{16}
}

func (x *CategoryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CategoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// @inject_tag: json:"parent_id"
	ParentId int64 `protobuf:"varint,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	// @inject_tag: json:"sort"
	Sort int64 `protobuf:"varint,4,opt,name=sort,proto3" json:"sort"`
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,5,opt,name=status,proto3" json:"status"`
	// @inject_tag: json:"creator"
	Creator string `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator"`
	// @inject_tag: json:"modifier"
	Modifier string `protobuf:"bytes,7,opt,name=modifier,proto3" json:"modifier"`
	// @inject_tag: json:"create_time"
	CreateTime int64 `protobuf:"varint,8,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	// @inject_tag: json:"update_time"
	UpdateTime int64 `protobuf:"varint,9,opt,name=update_time,json=updateTime,proto3" json:"update_time"`
}

func (x *CategoryReply) Reset() {
	*x = CategoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryReply) ProtoMessage() {}

func (x *CategoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryReply.ProtoReflect.Descriptor instead.
func (*CategoryReply) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{17}
}

func (x *CategoryReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategoryReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategoryReply) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CategoryReply) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *CategoryReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CategoryReply) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *CategoryReply) GetModifier() string {
	if x != nil {
		return x.Modifier
	}
	return ""
}

func (x *CategoryReply) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CategoryReply) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type DeleteCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json "id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json "user_id"
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteCategoryRequest) Reset() {
	*x = DeleteCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCategoryRequest) ProtoMessage() {}

func (x *DeleteCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCategoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteCategoryRequest) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteCategoryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteCategoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteCategoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json "id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCategoryReply) Reset() {
	*x = DeleteCategoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCategoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCategoryReply) ProtoMessage() {}

func (x *DeleteCategoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCategoryReply.ProtoReflect.Descriptor instead.
func (*DeleteCategoryReply) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteCategoryReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FavoritesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id"`
	// @inject_tag: json:"page"
	Page int64 `protobuf:"varint,2,opt,name=page,proto3" json:"page"`
	// @inject_tag: json:"size"
	Size int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size"`
	// @inject_tag: json:"all"
	All int64 `protobuf:"varint,4,opt,name=all,proto3" json:"all"`
}

func (x *FavoritesRequest) Reset() {
	*x = FavoritesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoritesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoritesRequest) ProtoMessage() {}

func (x *FavoritesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoritesRequest.ProtoReflect.Descriptor instead.
func (*FavoritesRequest) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{20}
}

func (x *FavoritesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FavoritesRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FavoritesRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FavoritesRequest) GetAll() int64 {
	if x != nil {
		return x.All
	}
	return 0
}

type FavoriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id"`
	// @inject_tag: json:"recipe_id"
	RecipeId int64 `protobuf:"varint,2,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id"`
}

func (x *FavoriteRequest) Reset() {
	*x = FavoriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteRequest) ProtoMessage() {}

func (x *FavoriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteRequest.ProtoReflect.Descriptor instead.
func (*FavoriteRequest) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{21}
}

func (x *FavoriteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FavoriteRequest) GetRecipeId() int64 {
	if x != nil {
		return x.RecipeId
	}
	return 0
}

type FavoritesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"items"
	Items []*FavoriteReply `protobuf:"bytes,1,rep,name=items,proto3" json:"items"`
}

func (x *FavoritesReply) Reset() {
	*x = FavoritesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoritesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoritesReply) ProtoMessage() {}

func (x *FavoritesReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoritesReply.ProtoReflect.Descriptor instead.
func (*FavoritesReply) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{22}
}

func (x *FavoritesReply) GetItems() []*FavoriteReply {
	if x != nil {
		return x.Items
	}
	return nil
}

type FavoriteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RecipeId int64  `protobuf:"varint,2,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	UserId   string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *FavoriteReply) Reset() {
	*x = FavoriteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteReply) ProtoMessage() {}

func (x *FavoriteReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteReply.ProtoReflect.Descriptor instead.
func (*FavoriteReply) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{23}
}

func (x *FavoriteReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FavoriteReply) GetRecipeId() int64 {
	if x != nil {
		return x.RecipeId
	}
	return 0
}

func (x *FavoriteReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type SaveFavoritesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"recipe_id"
	RecipeId int64 `protobuf:"varint,1,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id"`
	// @inject_tag: json:"user_id"
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id"`
	// @inject_tag: json:"action"
	Action int32 `protobuf:"varint,3,opt,name=action,proto3" json:"action"`
}

func (x *SaveFavoritesRequest) Reset() {
	*x = SaveFavoritesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveFavoritesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveFavoritesRequest) ProtoMessage() {}

func (x *SaveFavoritesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveFavoritesRequest.ProtoReflect.Descriptor instead.
func (*SaveFavoritesRequest) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{24}
}

func (x *SaveFavoritesRequest) GetRecipeId() int64 {
	if x != nil {
		return x.RecipeId
	}
	return 0
}

func (x *SaveFavoritesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SaveFavoritesRequest) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

type SaveFavoritesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveFavoritesReply) Reset() {
	*x = SaveFavoritesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_recipe_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveFavoritesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveFavoritesReply) ProtoMessage() {}

func (x *SaveFavoritesReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_recipe_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveFavoritesReply.ProtoReflect.Descriptor instead.
func (*SaveFavoritesReply) Descriptor() ([]byte, []int) {
	return file_v1_recipe_service_proto_rawDescGZIP(), []int{25}
}

var File_v1_recipe_service_proto protoreflect.FileDescriptor

var file_v1_recipe_service_proto_rawDesc = []byte{
	0x0a, 0x17, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0e, 0x0a, 0x0c, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x28, 0x0a, 0x0a, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x6f,
	0x75, 0x73, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x6f,
	0x75, 0x73, 0x65, 0x6c, 0x22, 0x2e, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x6f,
	0x75, 0x73, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x6f,
	0x75, 0x73, 0x65, 0x6c, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xa9, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x5a, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x1f,
	0x0a, 0x0d, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xde, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x22, 0xcf, 0x01, 0x0a, 0x11, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x11, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x6e,
	0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74,
	0x49, 0x64, 0x22, 0x5f, 0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x53, 0x61, 0x76,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21,
	0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xf4, 0x01, 0x0a, 0x0d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x65, 0x0a, 0x10, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x22, 0x47, 0x0a, 0x0f, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x49,
	0x64, 0x22, 0x48, 0x0a, 0x0e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x55, 0x0a, 0x0d, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x64, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x61, 0x76, 0x65,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xb5,
	0x0b, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x5a, 0x0a, 0x05, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1f, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x76, 0x31, 0x2f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x6e, 0x0a, 0x09, 0x53, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x23, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x13, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x73, 0x61,
	0x76, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x62, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73,
	0x12, 0x21, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x12, 0x5e, 0x0a, 0x06, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x72, 0x0a, 0x0a, 0x53, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x2f, 0x73, 0x61, 0x76, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x7a, 0x0a,
	0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x26, 0x2e,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x6e, 0x0a, 0x0a, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x08, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x7a, 0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61,
	0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x2f, 0x73, 0x61, 0x76, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x82, 0x01,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x28, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0x6a, 0x0a, 0x09, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12,
	0x23, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12,
	0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x66,
	0x0a, 0x08, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x7e, 0x0a, 0x0d, 0x53, 0x61, 0x76, 0x65, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22,
	0x12, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x73,
	0x61, 0x76, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x78, 0x75, 0x61, 0x6e, 0x2f, 0x72, 0x75, 0x62, 0x65, 0x72,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_v1_recipe_service_proto_rawDescOnce sync.Once
	file_v1_recipe_service_proto_rawDescData = file_v1_recipe_service_proto_rawDesc
)

func file_v1_recipe_service_proto_rawDescGZIP() []byte {
	file_v1_recipe_service_proto_rawDescOnce.Do(func() {
		file_v1_recipe_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_recipe_service_proto_rawDescData)
	})
	return file_v1_recipe_service_proto_rawDescData
}

var file_v1_recipe_service_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_v1_recipe_service_proto_goTypes = []interface{}{
	(*IndexRequest)(nil),          // 0: recipe.service.v1.IndexRequest
	(*IndexReply)(nil),            // 1: recipe.service.v1.IndexReply
	(*SaveIndexRequest)(nil),      // 2: recipe.service.v1.SaveIndexRequest
	(*SaveIndexReply)(nil),        // 3: recipe.service.v1.SaveIndexReply
	(*RecipesRequest)(nil),        // 4: recipe.service.v1.RecipesRequest
	(*RecipesReply)(nil),          // 5: recipe.service.v1.RecipesReply
	(*RecipeRequest)(nil),         // 6: recipe.service.v1.RecipeRequest
	(*RecipeReply)(nil),           // 7: recipe.service.v1.RecipeReply
	(*SaveRecipeRequest)(nil),     // 8: recipe.service.v1.SaveRecipeRequest
	(*SaveRecipeReply)(nil),       // 9: recipe.service.v1.SaveRecipeReply
	(*DeleteRecipeRequest)(nil),   // 10: recipe.service.v1.DeleteRecipeRequest
	(*DeleteRecipeReply)(nil),     // 11: recipe.service.v1.DeleteRecipeReply
	(*CategoriesRequest)(nil),     // 12: recipe.service.v1.CategoriesRequest
	(*CategoriesReply)(nil),       // 13: recipe.service.v1.CategoriesReply
	(*SaveCategoryRequest)(nil),   // 14: recipe.service.v1.SaveCategoryRequest
	(*SaveCategoryReply)(nil),     // 15: recipe.service.v1.SaveCategoryReply
	(*CategoryRequest)(nil),       // 16: recipe.service.v1.CategoryRequest
	(*CategoryReply)(nil),         // 17: recipe.service.v1.CategoryReply
	(*DeleteCategoryRequest)(nil), // 18: recipe.service.v1.DeleteCategoryRequest
	(*DeleteCategoryReply)(nil),   // 19: recipe.service.v1.DeleteCategoryReply
	(*FavoritesRequest)(nil),      // 20: recipe.service.v1.FavoritesRequest
	(*FavoriteRequest)(nil),       // 21: recipe.service.v1.FavoriteRequest
	(*FavoritesReply)(nil),        // 22: recipe.service.v1.FavoritesReply
	(*FavoriteReply)(nil),         // 23: recipe.service.v1.FavoriteReply
	(*SaveFavoritesRequest)(nil),  // 24: recipe.service.v1.SaveFavoritesRequest
	(*SaveFavoritesReply)(nil),    // 25: recipe.service.v1.SaveFavoritesReply
}
var file_v1_recipe_service_proto_depIdxs = []int32{
	7,  // 0: recipe.service.v1.RecipesReply.items:type_name -> recipe.service.v1.RecipeReply
	17, // 1: recipe.service.v1.CategoriesReply.items:type_name -> recipe.service.v1.CategoryReply
	23, // 2: recipe.service.v1.FavoritesReply.items:type_name -> recipe.service.v1.FavoriteReply
	0,  // 3: recipe.service.v1.Recipe.Index:input_type -> recipe.service.v1.IndexRequest
	2,  // 4: recipe.service.v1.Recipe.SaveIndex:input_type -> recipe.service.v1.SaveIndexRequest
	4,  // 5: recipe.service.v1.Recipe.Recipes:input_type -> recipe.service.v1.RecipesRequest
	6,  // 6: recipe.service.v1.Recipe.Recipe:input_type -> recipe.service.v1.RecipeRequest
	8,  // 7: recipe.service.v1.Recipe.SaveRecipe:input_type -> recipe.service.v1.SaveRecipeRequest
	10, // 8: recipe.service.v1.Recipe.DeleteRecipe:input_type -> recipe.service.v1.DeleteRecipeRequest
	12, // 9: recipe.service.v1.Recipe.Categories:input_type -> recipe.service.v1.CategoriesRequest
	16, // 10: recipe.service.v1.Recipe.Category:input_type -> recipe.service.v1.CategoryRequest
	14, // 11: recipe.service.v1.Recipe.SaveCategory:input_type -> recipe.service.v1.SaveCategoryRequest
	18, // 12: recipe.service.v1.Recipe.DeleteCategory:input_type -> recipe.service.v1.DeleteCategoryRequest
	20, // 13: recipe.service.v1.Recipe.Favorites:input_type -> recipe.service.v1.FavoritesRequest
	21, // 14: recipe.service.v1.Recipe.Favorite:input_type -> recipe.service.v1.FavoriteRequest
	24, // 15: recipe.service.v1.Recipe.SaveFavorites:input_type -> recipe.service.v1.SaveFavoritesRequest
	1,  // 16: recipe.service.v1.Recipe.Index:output_type -> recipe.service.v1.IndexReply
	3,  // 17: recipe.service.v1.Recipe.SaveIndex:output_type -> recipe.service.v1.SaveIndexReply
	5,  // 18: recipe.service.v1.Recipe.Recipes:output_type -> recipe.service.v1.RecipesReply
	7,  // 19: recipe.service.v1.Recipe.Recipe:output_type -> recipe.service.v1.RecipeReply
	9,  // 20: recipe.service.v1.Recipe.SaveRecipe:output_type -> recipe.service.v1.SaveRecipeReply
	11, // 21: recipe.service.v1.Recipe.DeleteRecipe:output_type -> recipe.service.v1.DeleteRecipeReply
	13, // 22: recipe.service.v1.Recipe.Categories:output_type -> recipe.service.v1.CategoriesReply
	17, // 23: recipe.service.v1.Recipe.Category:output_type -> recipe.service.v1.CategoryReply
	15, // 24: recipe.service.v1.Recipe.SaveCategory:output_type -> recipe.service.v1.SaveCategoryReply
	19, // 25: recipe.service.v1.Recipe.DeleteCategory:output_type -> recipe.service.v1.DeleteCategoryReply
	22, // 26: recipe.service.v1.Recipe.Favorites:output_type -> recipe.service.v1.FavoritesReply
	23, // 27: recipe.service.v1.Recipe.Favorite:output_type -> recipe.service.v1.FavoriteReply
	25, // 28: recipe.service.v1.Recipe.SaveFavorites:output_type -> recipe.service.v1.SaveFavoritesReply
	16, // [16:29] is the sub-list for method output_type
	3,  // [3:16] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_v1_recipe_service_proto_init() }
func file_v1_recipe_service_proto_init() {
	if File_v1_recipe_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_recipe_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveIndexReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecipesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecipesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecipeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecipeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRecipeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRecipeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecipeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecipeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoriesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveCategoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCategoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoritesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoritesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveFavoritesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_recipe_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveFavoritesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_recipe_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_recipe_service_proto_goTypes,
		DependencyIndexes: file_v1_recipe_service_proto_depIdxs,
		MessageInfos:      file_v1_recipe_service_proto_msgTypes,
	}.Build()
	File_v1_recipe_service_proto = out.File
	file_v1_recipe_service_proto_rawDesc = nil
	file_v1_recipe_service_proto_goTypes = nil
	file_v1_recipe_service_proto_depIdxs = nil
}
