syntax = "proto3";
package recipe.frontend.v1;

import "google/api/annotations.proto";

option go_package = "github.com/exuan/ruber/api/recipe/frontend/v1;v1";

service frontend {
  rpc Index (IndexRequest) returns (IndexReply) {
    option(google.api.http) = {
      get : "/v1/index"
    };
  }

  rpc Register(RegisterRequest) returns (RegisterReply) {
    option (google.api.http) = {
      post: "/v1/register",
      body:"*"
    };
  }

  rpc Login(LoginRequest) returns (LoginReply) {
    option (google.api.http) = {
      post: "/v1/login",
      body:"*"
    };
  }

  rpc Logout(LogoutRequest) returns (LogoutReply) {
    option (google.api.http) = {
      post: "/v1/logout",
      body:"*"
    };
  }

  rpc User(UserRequest) returns (UserReply) {
    option (google.api.http) = {
      get: "/v1/user",
    };
  }

  //  rpc RecipeIndex (RecipeIndexRequest) returns (RecipeIndexReply) {
  //    option(google.api.http) = {
  //      get : "/v1/recipe/index"
  //    };
  //  }

  rpc Recipes (RecipesRequest) returns (RecipesReply) {
    option(google.api.http) = {
      get : "/v1/recipes"
    };
  }

  rpc Recipe (RecipeRequest) returns (RecipeReply) {
    option(google.api.http) = {
      get : "/v1/recipe"
    };
  }

  rpc RecipeCategories(CategoriesRequest) returns (CategoriesReply) {
    option(google.api.http) = {
      get : "/v1/recipe/categories"
    };
  }

  rpc SaveFavorites (SaveFavoritesRequest) returns (SaveFavoritesReply) {
    option(google.api.http) = {
      post : "/v1/recipe/favorites/save",
      body:"*"
    };
  }

}

message IndexRequest {

}

message IndexReply {
  repeated  string carousel = 1;
}

message RegisterRequest {
  // @inject_tag: json:"username" binding:"required,gte=2,lte=16"
  string username = 1;
  // @inject_tag: json:"password" binding:"required,gte=6,lte=32"
  string password = 2;
}

message RegisterReply {
}

message LoginRequest {
  // @inject_tag: json:"username" binding:"required,gte=2,lte=16"
  string username = 1;
  // @inject_tag: json:"password" binding:"required,gte=6,lte=32"
  string password = 2;
}

message LoginReply {
  string token = 1;
}

message LogoutRequest{
}

message LogoutReply{

}

message UserRequest {

}

message UserReply {
  // @inject_tag: json:"id"
  string id = 1;
  // @inject_tag: json:"username"
  string username = 2;
  // @inject_tag: json:"phone"
  string phone = 3;
  // @inject_tag: json:"nickname"
  string nickname = 4;
  // @inject_tag: json:"avatar"
  string avatar = 5;
  // @inject_tag: json:"create_time"
  int64 create_time = 6;
  // @inject_tag: json:"update_time"
  int64 update_time = 7;
}

message RecipesRequest {
  // @inject_tag: json:"id" binding:"omitempty,min=0,max=999999"
  int64 id = 1;
  // @inject_tag: json:"title" binding:"omitempty,lte=64"
  string title = 2;
  // @inject_tag: json:"category_id" binding:"min=0,max=999999"
  int64 category_id = 3;
  // @inject_tag: json:"weight" binding:"min=0,max=999999"
  int64 weight = 4;
  // @inject_tag: json:"page" binding:"required,min=1,max=999999"
  int64 page = 5;
  // @inject_tag: json:"size" binding:"required,min=1,max=500"
  int64 size = 6;
  // @inject_tag: json:"is_favorite" binding:"oneof=0 1"
  int64 is_favorite = 7;
}

message RecipesReply {
  // @inject_tag: json:"items"
  repeated RecipeReply items = 1;
}

message RecipeRequest {
  // @inject_tag: json:"id" binding:"required,min=0,max=999999"
  int64 id = 1;
}

message RecipeReply {
  // @inject_tag: json:"id"
  int64 id = 1;
  // @inject_tag: json:"title"
  string title = 2;
  // @inject_tag: json:"category_id"
  int64 category_id = 3;
  // @inject_tag: json:"content"
  string content = 4;
  // @inject_tag: json:"weight"
  int64 weight = 5;
  // @inject_tag: json:"sort"
  int64 sort = 6;
  // @inject_tag: json:"create_time"
  int64 create_time = 7;
  // @inject_tag: json:"update_time"
  int64 update_time = 8;
  // @inject_tag: json:"is_favorite"
  int64 is_favorite = 9;
  // @inject_tag: json:"image"
  string image = 10;
  // @inject_tag: json:"views"
  int64 views = 11;
}

message CategoriesRequest {
  // @inject_tag: json:"id"
  int64 id = 1;
  // @inject_tag: json:"name"
  string name = 2;
  // @inject_tag: json:"all"
  int64 all = 3;
}

message CategoriesReply{
  repeated CategoryReply items = 2;
}

message CategoryReply {
  // @inject_tag: json:"id"
  int64 id = 1;
  // @inject_tag: json:"name"
  string name = 2;
  // @inject_tag: json:"parent_id"
  int64 parent_id = 3;
  // @inject_tag: json:"sort"
  int64 sort = 4;
  // @inject_tag: json:"create_time"
  int64 create_time = 5;
  // @inject_tag: json:"update_time"
  int64 update_time = 6;
}

message SaveFavoritesRequest {
  // @inject_tag: json:"recipe_id" binding:"required,min=1,max=9999999"
  int64 recipe_id = 1;
  // @inject_tag: json:"action" binding:"oneof=0 1"
  int32 action = 2;
}

message SaveFavoritesReply {

}