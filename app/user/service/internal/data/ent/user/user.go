// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldPhone holds the string denoting the phone field in the database.
	FieldPhone = "phone"
	// FieldNickname holds the string denoting the nickname field in the database.
	FieldNickname = "nickname"
	// FieldAvatar holds the string denoting the avatar field in the database.
	FieldAvatar = "avatar"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldSalt holds the string denoting the salt field in the database.
	FieldSalt = "salt"
	// FieldOwner holds the string denoting the owner field in the database.
	FieldOwner = "owner"
	// FieldApp holds the string denoting the app field in the database.
	FieldApp = "app"
	// FieldProperties holds the string denoting the properties field in the database.
	FieldProperties = "properties"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldCreator holds the string denoting the creator field in the database.
	FieldCreator = "creator"
	// FieldModifier holds the string denoting the modifier field in the database.
	FieldModifier = "modifier"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// Table holds the table name of the user in the database.
	Table = "rb_user"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldUsername,
	FieldPhone,
	FieldNickname,
	FieldAvatar,
	FieldPassword,
	FieldSalt,
	FieldOwner,
	FieldApp,
	FieldProperties,
	FieldStatus,
	FieldCreator,
	FieldModifier,
	FieldUpdateTime,
	FieldCreateTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultApp holds the default value on creation for the "app" field.
	DefaultApp string
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() int64
	// UpdateTimeValidator is a validator for the "update_time" field. It is called by the builders before save.
	UpdateTimeValidator func(int64) error
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() int64
	// CreateTimeValidator is a validator for the "create_time" field. It is called by the builders before save.
	CreateTimeValidator func(int64) error
)
