// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/exuan/ruber/app/user/service/internal/data/ent/schema"
	"github.com/exuan/ruber/app/user/service/internal/data/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescApp is the schema descriptor for app field.
	userDescApp := userFields[8].Descriptor()
	// user.DefaultApp holds the default value on creation for the app field.
	user.DefaultApp = userDescApp.Default.(string)
	// userDescStatus is the schema descriptor for status field.
	userDescStatus := userFields[10].Descriptor()
	// user.DefaultStatus holds the default value on creation for the status field.
	user.DefaultStatus = userDescStatus.Default.(int)
	// userDescUpdateTime is the schema descriptor for update_time field.
	userDescUpdateTime := userFields[13].Descriptor()
	// user.DefaultUpdateTime holds the default value on creation for the update_time field.
	user.DefaultUpdateTime = userDescUpdateTime.Default.(func() int64)
	// user.UpdateTimeValidator is a validator for the "update_time" field. It is called by the builders before save.
	user.UpdateTimeValidator = userDescUpdateTime.Validators[0].(func(int64) error)
	// userDescCreateTime is the schema descriptor for create_time field.
	userDescCreateTime := userFields[14].Descriptor()
	// user.DefaultCreateTime holds the default value on creation for the create_time field.
	user.DefaultCreateTime = userDescCreateTime.Default.(func() int64)
	// user.CreateTimeValidator is a validator for the "create_time" field. It is called by the builders before save.
	user.CreateTimeValidator = userDescCreateTime.Validators[0].(func(int64) error)
}
