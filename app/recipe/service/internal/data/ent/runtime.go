// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/exuan/ruber/app/recipe/service/internal/data/ent/category"
	"github.com/exuan/ruber/app/recipe/service/internal/data/ent/favorite"
	"github.com/exuan/ruber/app/recipe/service/internal/data/ent/recipe"
	"github.com/exuan/ruber/app/recipe/service/internal/data/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	categoryFields := schema.Category{}.Fields()
	_ = categoryFields
	// categoryDescStatus is the schema descriptor for status field.
	categoryDescStatus := categoryFields[4].Descriptor()
	// category.DefaultStatus holds the default value on creation for the status field.
	category.DefaultStatus = categoryDescStatus.Default.(int)
	// categoryDescUpdateTime is the schema descriptor for update_time field.
	categoryDescUpdateTime := categoryFields[7].Descriptor()
	// category.DefaultUpdateTime holds the default value on creation for the update_time field.
	category.DefaultUpdateTime = categoryDescUpdateTime.Default.(func() int64)
	// category.UpdateTimeValidator is a validator for the "update_time" field. It is called by the builders before save.
	category.UpdateTimeValidator = categoryDescUpdateTime.Validators[0].(func(int64) error)
	// categoryDescCreateTime is the schema descriptor for create_time field.
	categoryDescCreateTime := categoryFields[8].Descriptor()
	// category.DefaultCreateTime holds the default value on creation for the create_time field.
	category.DefaultCreateTime = categoryDescCreateTime.Default.(func() int64)
	// category.CreateTimeValidator is a validator for the "create_time" field. It is called by the builders before save.
	category.CreateTimeValidator = categoryDescCreateTime.Validators[0].(func(int64) error)
	favoriteFields := schema.Favorite{}.Fields()
	_ = favoriteFields
	// favoriteDescCreateTime is the schema descriptor for create_time field.
	favoriteDescCreateTime := favoriteFields[3].Descriptor()
	// favorite.DefaultCreateTime holds the default value on creation for the create_time field.
	favorite.DefaultCreateTime = favoriteDescCreateTime.Default.(func() int64)
	recipeFields := schema.Recipe{}.Fields()
	_ = recipeFields
	// recipeDescTitle is the schema descriptor for title field.
	recipeDescTitle := recipeFields[1].Descriptor()
	// recipe.DefaultTitle holds the default value on creation for the title field.
	recipe.DefaultTitle = recipeDescTitle.Default.(string)
	// recipeDescStatus is the schema descriptor for status field.
	recipeDescStatus := recipeFields[8].Descriptor()
	// recipe.DefaultStatus holds the default value on creation for the status field.
	recipe.DefaultStatus = recipeDescStatus.Default.(int)
	// recipeDescUpdateTime is the schema descriptor for update_time field.
	recipeDescUpdateTime := recipeFields[11].Descriptor()
	// recipe.DefaultUpdateTime holds the default value on creation for the update_time field.
	recipe.DefaultUpdateTime = recipeDescUpdateTime.Default.(func() int64)
	// recipe.UpdateTimeValidator is a validator for the "update_time" field. It is called by the builders before save.
	recipe.UpdateTimeValidator = recipeDescUpdateTime.Validators[0].(func(int64) error)
	// recipeDescCreateTime is the schema descriptor for create_time field.
	recipeDescCreateTime := recipeFields[12].Descriptor()
	// recipe.DefaultCreateTime holds the default value on creation for the create_time field.
	recipe.DefaultCreateTime = recipeDescCreateTime.Default.(func() int64)
	// recipe.CreateTimeValidator is a validator for the "create_time" field. It is called by the builders before save.
	recipe.CreateTimeValidator = recipeDescCreateTime.Validators[0].(func(int64) error)
}
